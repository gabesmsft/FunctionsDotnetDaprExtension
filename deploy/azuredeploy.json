{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "deployFunctionApp": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "If you set the deployFunctionApp parameter to true, the Function App will be deployed. If you want to first test the local Functions project against the Service Bus topic, set deployFunctionApp to false."
      }
    },
    "location": {
      "defaultValue": "northeurope",
      "type": "String"
    },
    "environmentName": {
      "type": "string",
      "defaultValue": "[concat('ContainerAppEnv-', uniqueString(resourceGroup().id))]"
    },
    "functionappCI1": {
      "type": "String",
      "defaultValue": "docker|gfakedocker/functionswithdaprextension:latest"
    },
    "functionapp1": {
      "type": "String",
      "defaultValue": "[concat('daprextfunctionapp-', uniqueString(resourceGroup().id))]"
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[format('store{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name of the Storage Account"
      }
    },
    "serviceBusNamespaceName": {
      "type": "string",
      "defaultValue": "[format('serviceBusNS-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name of the Service Bus namespace"
      }
    },
    "serviceBusTopicName": {
      "type": "string",
      "defaultValue": "mytopic1",
      "metadata": {
        "description": "Name of the Topic"
      }
    },
    "useConsumptionWorkloadProfile": {
      "type": "bool",
      "defaultValue": false,
      "allowedValues": [
        false,
        true
      ]
    }
  },
  "variables": {
    "policySBQueue": "RootManageSharedAccessKey",
    "policySBTopic": "policy1",
    "daprAppId1": "[parameters('functionapp1')]",
    "DOCKER_REGISTRY_SERVER_URL": "[split(split(parameters('functionappCI1'),'/')[0], '|')[1]]",
    "pubsub": "messagebus"
  },
  "resources": [
    {
      "apiVersion": "2018-01-01-preview",
      "name": "[parameters('serviceBusNamespaceName')]",
      "type": "Microsoft.ServiceBus/namespaces",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      }
    },
    {
      "apiVersion": "2017-04-01",
      "name": "[concat(parameters('serviceBusNamespaceName'), '/', parameters('serviceBusTopicName'))]",
      "type": "Microsoft.ServiceBus/namespaces/topics",
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces/', parameters('serviceBusNamespaceName'))]"
      ],
      "properties": {
        "defaultMessageTimeToLive": "P10675199DT2H48M5.4775807S",
        "maxSizeInMegabytes": 1024,
        "requiresDuplicateDetection": false,
        "duplicateDetectionHistoryTimeWindow": "PT10M",
        "enableBatchedOperations": false,
        "supportOrdering": false,
        "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
        "enablePartitioning": false,
        "enableExpress": false
      }
    },
    {
      "apiVersion": "2017-04-01",
      "name": "[concat(parameters('serviceBusNamespaceName'), '/', parameters('serviceBusTopicName'), '/', variables('policySBTopic'))]",
      "type": "Microsoft.ServiceBus/namespaces/topics/authorizationRules",
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces/topics/', parameters('serviceBusNamespaceName'), parameters('serviceBusTopicName'))]"
      ],
      "properties": {
        "Rights": [
          "Send",
          "Listen",
          "Manage"
        ]
      }
    },
    {
      "apiVersion": "2023-05-01",
      "type": "Microsoft.App/managedEnvironments/daprComponents",
      "name": "[concat(parameters('environmentName'), '/', variables('pubsub'))]",
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces/topics/authorizationRules',parameters('serviceBusNamespaceNAme'),parameters('serviceBusTopicName'),variables('policySBTopic'))]"
      ],
      "properties": {
        "componentType": "pubsub.azure.servicebus",
        "version": "v1",
        "ignoreErrors": false,
        "initTimeout": "50s",
        "secrets": [
          {
            "name": "sbconn1secret",
            "value": "[listKeys(resourceId('Microsoft.ServiceBus/namespaces/topics/authorizationRules',parameters('serviceBusNamespaceNAme'),parameters('serviceBusTopicName'),variables('policySBTopic')),'2017-04-01').secondaryConnectionString]"
          }
        ],
        "metadata": [
          {
            "name": "connectionString",
            "secretRef": "sbconn1secret"
          }
        ],
        "scopes": [
          "[parameters('functionapp1')]"
        ]
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-04-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot"
      }
    },
    {
      "condition": "[equals(string(parameters('deployFunctionApp')), 'True')]",
      "name": "[parameters('functionapp1')]",
      "type": "Microsoft.Web/sites",
      "kind": "functionapp",
      "apiVersion": "2022-09-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "[resourceId('Microsoft.App/managedEnvironments/daprComponents', parameters('environmentName'), variables('pubsub'))]"
      ],
      "properties": {
        "name": "[parameters('functionapp1')]",
        "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments/', parameters('environmentName'))]",
        "workloadProfileName": "[if(parameters('useConsumptionWorkloadProfile'), 'Consumption', json('null'))]",
        "daprConfig": {
          "enabled": true,
          "appId": "[parameters('functionapp1')]",
          "appPort": 3001,
          "httpReadBufferSize": "",
          "httpMaxRequestSize": "",
          "logLevel": "",
          "enableApiLogging": true
        },
        "siteConfig": {
          "linuxFxVersion": "[parameters('functionappCI1')]",
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-05-01').keys[0].value)]"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_URL",
              "value": "[variables('DOCKER_REGISTRY_SERVER_URL')]"
            }
          ]
        }
      }
    }
  ]
}